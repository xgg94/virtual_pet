{
  "contractName": "PetFactory",
  "abi": [
    {
      "inputs": [],
      "name": "setPetFactoryOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_petName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_race",
          "type": "uint256"
        }
      ],
      "name": "createPet",
      "outputs": [
        {
          "internalType": "address",
          "name": "petAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_petName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_race\",\"type\":\"uint256\"}],\"name\":\"createPet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"petAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPetFactoryOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PetFactory.sol\":\"PetFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ATM.sol\":{\"keccak256\":\"0x328f7fe0755a66f0217454d93d82d95509a80838675635e35ee55bbd09ca9a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead3e531d79eb9d08277eb1305fa0b158edd4afa29c20eca7d76c3b5d610372d\",\"dweb:/ipfs/QmbZo3Q6yo8CjVu4xi8ENP1K14UxZtWLBQXdP4Py4rUnxP\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xe16a7e0199f621762baec211656351ed85de4870c2a95c8bf2da42b3230df82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85f585ec10fbd3ddc6a8ee26c04d8a16ea9a114420ff675ab4c45eb7640be4ef\",\"dweb:/ipfs/QmUwdMi5kmPEwJ47pew4E7CdmEuKRoXYsHpDkaUQzFbat5\"]},\"project:/contracts/PetFactory.sol\":{\"keccak256\":\"0x936b727e090f8c4437092aa7f87ca00f7a05e27f9a58f86efd584aeb72fbd44a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5717a84cfd0c6dbe5d2c7c1197920aeac5538af6fec96c47890cddd463da34a9\",\"dweb:/ipfs/QmRTpQ9nmMrV95eaax18K3aBciVgp8FV8VVLahhPmQU7fQ\"]},\"project:/contracts/PetToken.sol\":{\"keccak256\":\"0x7f6fb9baac469cd7ffa730fb0cc7a2b4d6cc1780aab7f42a32aac5ff98101982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bf4a3bc9bda542596c7911440f90c094718b042f4473ff319fb23eb521c4ccb\",\"dweb:/ipfs/QmYFB9aQLBqZDiy4Tam8BS3rvQs9gqsD6cTqvYKDjHmUKh\"]},\"project:/contracts/Trades.sol\":{\"keccak256\":\"0xe17708950ba1074bdd0504708ecc5696e07c0bb073f4e8bf61f92acd422844f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be18f370a39ecf27d1cf436f21bfa375d6f36d175a5d99e6a38ab73184e45f6a\",\"dweb:/ipfs/QmeKrR4qE318aNqYUh7wTQKgTi67uBQKTLtXMiBhpTotUo\"]},\"project:/contracts/VirtualPet.sol\":{\"keccak256\":\"0x86a8e2c2caf158cc90f4fb167e95cce9e5f227f0814a034a34780281fa8eb048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1a5ba306ab450ccc693ddaf558e8ebae3987fef7b35e983e0f67b1c063abf5d\",\"dweb:/ipfs/QmS47Fy6QbCkGnFVFybvLWvf5BAN4fLmfMAmmGjmMCRFpi\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8984:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:6",
                "type": ""
              }
            ],
            "src": "7:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:6",
                "type": ""
              }
            ],
            "src": "139:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:6",
                "type": ""
              }
            ],
            "src": "241:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:6",
                "type": ""
              }
            ],
            "src": "365:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:6",
                "type": ""
              }
            ],
            "src": "593:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1020:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1029:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1032:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1022:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1022:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "986:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1011:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "993:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "993:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "983:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "976:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "973:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "956:5:6",
                "type": ""
              }
            ],
            "src": "920:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1100:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1110:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1132:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1119:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1110:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1175:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1148:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1148:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1078:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1086:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1094:5:6",
                "type": ""
              }
            ],
            "src": "1048:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1282:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1299:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1302:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1292:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1292:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1292:12:6"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1193:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1405:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1415:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1415:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1415:12:6"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "1316:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1487:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1497:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1515:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1522:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1511:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1511:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1531:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1527:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1507:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1497:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1470:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1480:6:6",
                "type": ""
              }
            ],
            "src": "1439:102:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1575:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1595:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1689:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1692:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1682:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1682:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1713:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1716:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1706:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1706:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1706:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1547:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1776:238:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1786:58:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1808:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1838:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1816:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1804:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:40:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1790:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1955:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1957:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1957:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1957:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1898:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1910:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1895:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1895:34:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1934:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1946:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1931:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1931:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1892:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1889:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1993:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1997:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1986:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1986:22:6"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1762:6:6",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1770:4:6",
                "type": ""
              }
            ],
            "src": "1733:281:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2061:88:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2071:30:6",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "2081:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2081:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2071:6:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2130:6:6"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2138:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "2110:19:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2110:33:6"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2045:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2054:6:6",
                "type": ""
              }
            ],
            "src": "2020:129:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2222:241:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2327:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2329:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2329:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2329:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2299:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2307:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2296:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2293:56:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2359:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2389:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "2367:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2359:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2433:23:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2445:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2441:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:15:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2433:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2206:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2217:4:6",
                "type": ""
              }
            ],
            "src": "2155:308:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2520:103:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2543:3:6"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2548:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2553:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2530:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2530:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2530:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2601:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2606:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2597:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:16:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2615:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2590:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2590:27:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2590:27:6"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2502:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2507:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2512:6:6",
                "type": ""
              }
            ],
            "src": "2469:154:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2713:328:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2723:75:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2790:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2748:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2748:49:6"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2732:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:66:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2723:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2814:5:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2821:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2807:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2807:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2837:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2852:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2859:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2848:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:16:6"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2841:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2902:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2904:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2904:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2904:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2883:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2888:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2879:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2879:16:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2897:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2876:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:25:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2873:112:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3018:3:6"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3023:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3028:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2994:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2994:41:6"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2686:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2691:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2699:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2707:5:6",
                "type": ""
              }
            ],
            "src": "2629:412:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3123:278:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3172:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "3174:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3174:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3174:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3151:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3159:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3147:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3147:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3166:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3133:122:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3264:34:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3291:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3278:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3278:20:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3268:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3307:88:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3368:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3376:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3364:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3364:17:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3383:6:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3391:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3316:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3316:79:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3307:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3101:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3109:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3117:5:6",
                "type": ""
              }
            ],
            "src": "3061:340:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3452:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3462:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3473:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3462:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3434:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3444:7:6",
                "type": ""
              }
            ],
            "src": "3407:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3533:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3590:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3599:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3602:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3592:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3592:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3592:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3556:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3581:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3563:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3563:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3553:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3553:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3546:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3546:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3543:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3526:5:6",
                "type": ""
              }
            ],
            "src": "3490:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3670:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3680:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3702:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3689:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3689:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3680:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3745:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3718:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3718:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3718:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3648:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3656:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3664:5:6",
                "type": ""
              }
            ],
            "src": "3618:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3873:689:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3919:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3921:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3921:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3921:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3894:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3903:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3915:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3886:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3886:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3883:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4012:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4027:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4041:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4031:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4056:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4091:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4102:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4087:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4087:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4111:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4066:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4066:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4056:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4139:288:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4154:46:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4185:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4196:2:6",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4181:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4181:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4168:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4168:32:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4158:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4247:83:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "4249:77:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4249:79:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4249:79:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4219:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4227:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4216:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4216:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "4213:117:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4344:73:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4389:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4400:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4385:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4385:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4409:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4354:30:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4354:63:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4344:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4437:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4452:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4466:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4456:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4482:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4517:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4528:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4513:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4513:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4537:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4492:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4492:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4482:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3827:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3838:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3850:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3858:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3866:6:6",
                "type": ""
              }
            ],
            "src": "3763:799:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4664:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4681:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4686:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4674:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4674:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4702:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4721:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4726:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4717:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4702:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4636:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4641:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4652:11:6",
                "type": ""
              }
            ],
            "src": "4568:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4849:62:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4871:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4879:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4867:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4867:14:6"
                      },
                      {
                        "hexValue": "4f776e657220616c72656164792073657421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4883:20:6",
                        "type": "",
                        "value": "Owner already set!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4860:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4860:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4860:44:6"
                }
              ]
            },
            "name": "store_literal_in_memory_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4841:6:6",
                "type": ""
              }
            ],
            "src": "4743:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5063:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5073:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5139:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5144:2:6",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5080:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5080:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5073:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5245:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
                      "nodeType": "YulIdentifier",
                      "src": "5156:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5156:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5258:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5269:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5274:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5265:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5265:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5258:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5051:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5059:3:6",
                "type": ""
              }
            ],
            "src": "4917:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5460:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5470:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5482:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5493:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5478:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5478:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5470:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5517:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5528:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5513:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5513:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5536:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5542:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5532:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5532:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5506:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5506:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5506:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5562:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5696:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5570:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5570:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5562:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5440:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5455:4:6",
                "type": ""
              }
            ],
            "src": "5289:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5820:62:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5842:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5850:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5838:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5838:14:6"
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e69656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5854:20:6",
                        "type": "",
                        "value": "Permission denied!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5831:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5831:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5831:44:6"
                }
              ]
            },
            "name": "store_literal_in_memory_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5812:6:6",
                "type": ""
              }
            ],
            "src": "5714:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6034:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6044:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6110:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6115:2:6",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6051:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6051:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6044:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6216:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
                      "nodeType": "YulIdentifier",
                      "src": "6127:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6127:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6229:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6240:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6245:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6236:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6236:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6229:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6022:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6030:3:6",
                "type": ""
              }
            ],
            "src": "5888:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6431:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6441:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6453:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6464:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6449:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6449:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6441:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6488:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6499:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6484:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6507:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6513:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6503:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6477:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6477:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6477:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6533:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6667:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6541:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6541:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6533:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6411:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6426:4:6",
                "type": ""
              }
            ],
            "src": "6260:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6744:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6755:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6771:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6765:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6765:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6755:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6727:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6737:6:6",
                "type": ""
              }
            ],
            "src": "6685:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6839:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6849:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6858:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6853:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6918:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6943:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6948:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6939:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6939:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6962:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6967:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6958:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6958:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6952:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6952:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6932:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6932:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6932:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6879:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6882:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6876:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6876:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6890:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6892:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6901:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6904:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6897:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6897:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6892:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6872:3:6",
                    "statements": []
                  },
                  "src": "6868:113:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7015:76:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7065:3:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7070:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7061:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7061:16:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7079:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7054:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7054:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7054:27:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6996:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6999:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6993:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6993:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6990:101:6"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6821:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6826:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6831:6:6",
                "type": ""
              }
            ],
            "src": "6790:307:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7195:272:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7205:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7252:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7219:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7219:39:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7209:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7267:78:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7333:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7338:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7274:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7274:71:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7267:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7380:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7387:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7376:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7376:16:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7394:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7399:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7354:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7415:46:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7426:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7453:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7431:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7431:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7422:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7422:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7415:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7176:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7183:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7191:3:6",
                "type": ""
              }
            ],
            "src": "7103:364:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7647:359:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7657:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7669:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7680:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7665:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7665:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7657:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7737:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7750:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7761:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7746:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7746:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7693:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7693:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7693:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7785:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7796:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7805:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7811:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7801:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7801:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7774:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:48:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7774:48:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7831:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7903:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7912:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7839:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7839:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7831:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7971:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7984:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7995:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7980:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7980:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7927:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7927:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7927:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_address__to_t_address_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7603:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7615:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7623:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7631:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7642:4:6",
                "type": ""
              }
            ],
            "src": "7473:533:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8118:66:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8140:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8148:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8136:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8136:14:6"
                      },
                      {
                        "hexValue": "4e6f20737563682070657420617661696c61626c6521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8152:24:6",
                        "type": "",
                        "value": "No such pet available!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8129:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:48:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8129:48:6"
                }
              ]
            },
            "name": "store_literal_in_memory_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8110:6:6",
                "type": ""
              }
            ],
            "src": "8012:172:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8336:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8346:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8412:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8417:2:6",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8353:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8353:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8346:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8518:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
                      "nodeType": "YulIdentifier",
                      "src": "8429:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8429:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8429:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8531:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8542:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8547:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8538:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8538:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8531:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8324:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8332:3:6",
                "type": ""
              }
            ],
            "src": "8190:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8733:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8743:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8755:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8766:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8751:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8751:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8743:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8790:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8801:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8786:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8809:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8815:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8805:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8805:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8779:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8779:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8835:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8969:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8843:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8843:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8835:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8713:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8728:4:6",
                "type": ""
              }
            ],
            "src": "8562:419:6"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner already set!\")\n\n    }\n\n    function abi_encode_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Permission denied!\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_address__to_t_address_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00(memPtr) {\n\n        mstore(add(memPtr, 0), \"No such pet available!\")\n\n    }\n\n    function abi_encode_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:911:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "85:911:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:180;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:564;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;243:180;291:16;341:1;324:19;;:5;;;;;;;;;;:19;;;316:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;384:10;376:5;;:18;;;;;;;;;;;;;;;;;;411:5;;;;;;;;;;404:12;;243:180;:::o;429:564::-;525:18;186:10;177:19;;:5;;;;;;;;;;:19;;;169:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;555:14:::1;591:1;582:5;:10:::0;579:379:::1;;624:6;639:8;650:10;613:48;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;607:54;;579:379;;;698:1;689:5;:10:::0;686:272:::1;;731:6;746:8;757:10;720:48;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;714:54;;686:272;;;805:1;796:5;:10:::0;793:165:::1;;840:6;855:8;866:10;827:50;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;821:56;;793:165;;;915:32;;;;;;;;;;:::i;:::-;;;;;;;;793:165;686:272;579:379;982:3;967:19;;;429:564:::0;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:117::-;1302:1;1299;1292:12;1316:117;1425:1;1422;1415:12;1439:102;1480:6;1531:2;1527:7;1522:2;1515:5;1511:14;1507:28;1497:38;;1439:102;;;:::o;1547:180::-;1595:77;1592:1;1585:88;1692:4;1689:1;1682:15;1716:4;1713:1;1706:15;1733:281;1816:27;1838:4;1816:27;:::i;:::-;1808:6;1804:40;1946:6;1934:10;1931:22;1910:18;1898:10;1895:34;1892:62;1889:88;;;1957:18;;:::i;:::-;1889:88;1997:10;1993:2;1986:22;1776:238;1733:281;;:::o;2020:129::-;2054:6;2081:20;;:::i;:::-;2071:30;;2110:33;2138:4;2130:6;2110:33;:::i;:::-;2020:129;;;:::o;2155:308::-;2217:4;2307:18;2299:6;2296:30;2293:56;;;2329:18;;:::i;:::-;2293:56;2367:29;2389:6;2367:29;:::i;:::-;2359:37;;2451:4;2445;2441:15;2433:23;;2155:308;;;:::o;2469:154::-;2553:6;2548:3;2543;2530:30;2615:1;2606:6;2601:3;2597:16;2590:27;2469:154;;;:::o;2629:412::-;2707:5;2732:66;2748:49;2790:6;2748:49;:::i;:::-;2732:66;:::i;:::-;2723:75;;2821:6;2814:5;2807:21;2859:4;2852:5;2848:16;2897:3;2888:6;2883:3;2879:16;2876:25;2873:112;;;2904:79;;:::i;:::-;2873:112;2994:41;3028:6;3023:3;3018;2994:41;:::i;:::-;2713:328;2629:412;;;;;:::o;3061:340::-;3117:5;3166:3;3159:4;3151:6;3147:17;3143:27;3133:122;;3174:79;;:::i;:::-;3133:122;3291:6;3278:20;3316:79;3391:3;3383:6;3376:4;3368:6;3364:17;3316:79;:::i;:::-;3307:88;;3123:278;3061:340;;;;:::o;3407:77::-;3444:7;3473:5;3462:16;;3407:77;;;:::o;3490:122::-;3563:24;3581:5;3563:24;:::i;:::-;3556:5;3553:35;3543:63;;3602:1;3599;3592:12;3543:63;3490:122;:::o;3618:139::-;3664:5;3702:6;3689:20;3680:29;;3718:33;3745:5;3718:33;:::i;:::-;3618:139;;;;:::o;3763:799::-;3850:6;3858;3866;3915:2;3903:9;3894:7;3890:23;3886:32;3883:119;;;3921:79;;:::i;:::-;3883:119;4041:1;4066:53;4111:7;4102:6;4091:9;4087:22;4066:53;:::i;:::-;4056:63;;4012:117;4196:2;4185:9;4181:18;4168:32;4227:18;4219:6;4216:30;4213:117;;;4249:79;;:::i;:::-;4213:117;4354:63;4409:7;4400:6;4389:9;4385:22;4354:63;:::i;:::-;4344:73;;4139:288;4466:2;4492:53;4537:7;4528:6;4517:9;4513:22;4492:53;:::i;:::-;4482:63;;4437:118;3763:799;;;;;:::o;4568:169::-;4652:11;4686:6;4681:3;4674:19;4726:4;4721:3;4717:14;4702:29;;4568:169;;;;:::o;4743:168::-;4883:20;4879:1;4871:6;4867:14;4860:44;4743:168;:::o;4917:366::-;5059:3;5080:67;5144:2;5139:3;5080:67;:::i;:::-;5073:74;;5156:93;5245:3;5156:93;:::i;:::-;5274:2;5269:3;5265:12;5258:19;;4917:366;;;:::o;5289:419::-;5455:4;5493:2;5482:9;5478:18;5470:26;;5542:9;5536:4;5532:20;5528:1;5517:9;5513:17;5506:47;5570:131;5696:4;5570:131;:::i;:::-;5562:139;;5289:419;;;:::o;5714:168::-;5854:20;5850:1;5842:6;5838:14;5831:44;5714:168;:::o;5888:366::-;6030:3;6051:67;6115:2;6110:3;6051:67;:::i;:::-;6044:74;;6127:93;6216:3;6127:93;:::i;:::-;6245:2;6240:3;6236:12;6229:19;;5888:366;;;:::o;6260:419::-;6426:4;6464:2;6453:9;6449:18;6441:26;;6513:9;6507:4;6503:20;6499:1;6488:9;6484:17;6477:47;6541:131;6667:4;6541:131;:::i;:::-;6533:139;;6260:419;;;:::o;6685:99::-;6737:6;6771:5;6765:12;6755:22;;6685:99;;;:::o;6790:307::-;6858:1;6868:113;6882:6;6879:1;6876:13;6868:113;;;6967:1;6962:3;6958:11;6952:18;6948:1;6943:3;6939:11;6932:39;6904:2;6901:1;6897:10;6892:15;;6868:113;;;6999:6;6996:1;6993:13;6990:101;;;7079:1;7070:6;7065:3;7061:16;7054:27;6990:101;6839:258;6790:307;;;:::o;7103:364::-;7191:3;7219:39;7252:5;7219:39;:::i;:::-;7274:71;7338:6;7333:3;7274:71;:::i;:::-;7267:78;;7354:52;7399:6;7394:3;7387:4;7380:5;7376:16;7354:52;:::i;:::-;7431:29;7453:6;7431:29;:::i;:::-;7426:3;7422:39;7415:46;;7195:272;7103:364;;;;:::o;7473:533::-;7642:4;7680:2;7669:9;7665:18;7657:26;;7693:71;7761:1;7750:9;7746:17;7737:6;7693:71;:::i;:::-;7811:9;7805:4;7801:20;7796:2;7785:9;7781:18;7774:48;7839:78;7912:4;7903:6;7839:78;:::i;:::-;7831:86;;7927:72;7995:2;7984:9;7980:18;7971:6;7927:72;:::i;:::-;7473:533;;;;;;:::o;8012:172::-;8152:24;8148:1;8140:6;8136:14;8129:48;8012:172;:::o;8190:366::-;8332:3;8353:67;8417:2;8412:3;8353:67;:::i;:::-;8346:74;;8429:93;8518:3;8429:93;:::i;:::-;8547:2;8542:3;8538:12;8531:19;;8190:366;;;:::o;8562:419::-;8728:4;8766:2;8755:9;8751:18;8743:26;;8815:9;8809:4;8805:20;8801:1;8790:9;8786:17;8779:47;8843:131;8969:4;8843:131;:::i;:::-;8835:139;;8562:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./VirtualPet.sol\";\n\ncontract PetFactory {\n\n    address private owner;\n\n    modifier isOwner() {\n        require(owner == msg.sender, \"Permission denied!\");\n        _;\n    }\n\n    function setPetFactoryOwner() external returns (address newOwner) {\n\t    require(owner == address(0), \"Owner already set!\");\n        owner = msg.sender;\n        return owner;\n    }\n\n    function createPet (address _owner, string memory _petName, uint _race) public isOwner returns (address petAddress) {\n        VirtualPet pet;\n        if(_race == 1){\n            pet = new PetRat(_owner, string(_petName), msg.sender);\n        }\n        else if(_race == 2){\n            pet = new PetDog(_owner, string(_petName), msg.sender);\n        }\n        else if(_race == 3){\n            pet = new PetSheep(_owner, string(_petName), msg.sender);\n        }\n        else{\n            revert(\"No such pet available!\");\n        }\n        return address(pet);\n    }\n\n}",
  "sourcePath": "/Users/georg/truffle/e01604873/contracts/PetFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/PetFactory.sol",
    "exportedSymbols": {
      "ATM": [
        1009
      ],
      "PetDog": [
        2696
      ],
      "PetFactory": [
        1227
      ],
      "PetRat": [
        2319
      ],
      "PetSheep": [
        3074
      ],
      "VirtualPet": [
        1942
      ]
    },
    "id": 1228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "project:/contracts/VirtualPet.sol",
        "file": "./VirtualPet.sol",
        "id": 1104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 3075,
        "src": "57:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PetFactory",
        "contractDependencies": [
          2319,
          2696,
          3074
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1227,
        "linearizedBaseContracts": [
          1227
        ],
        "name": "PetFactory",
        "nameLocation": "94:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1106,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "128:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "112:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "159:78:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1109,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "177:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "186:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "186:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "177:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e69656421",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "198:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
                          "typeString": "literal_string \"Permission denied!\""
                        },
                        "value": "Permission denied!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
                          "typeString": "literal_string \"Permission denied!\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "169:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "169:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "169:50:2"
                },
                {
                  "id": 1116,
                  "nodeType": "PlaceholderStatement",
                  "src": "229:1:2"
                }
              ]
            },
            "id": 1118,
            "name": "isOwner",
            "nameLocation": "149:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:2:2"
            },
            "src": "140:97:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "309:114:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "324:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "341:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "333:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "333:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "333:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "324:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e657220616c72656164792073657421",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
                          "typeString": "literal_string \"Owner already set!\""
                        },
                        "value": "Owner already set!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
                          "typeString": "literal_string \"Owner already set!\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "316:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "316:50:2"
                },
                {
                  "expression": {
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1133,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "376:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "384:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "384:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "376:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "376:18:2"
                },
                {
                  "expression": {
                    "id": 1138,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1106,
                    "src": "411:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1122,
                  "id": 1139,
                  "nodeType": "Return",
                  "src": "404:12:2"
                }
              ]
            },
            "functionSelector": "47c92a14",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPetFactoryOwner",
            "nameLocation": "252:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:2:2"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "299:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "291:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "290:18:2"
            },
            "scope": 1227,
            "src": "243:180:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "545:448:2",
              "statements": [
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "pet",
                      "nameLocation": "566:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "555:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VirtualPet_$1942",
                        "typeString": "contract VirtualPet"
                      },
                      "typeName": {
                        "id": 1155,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1154,
                          "name": "VirtualPet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1942,
                          "src": "555:10:2"
                        },
                        "referencedDeclaration": 1942,
                        "src": "555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1157,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:14:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1158,
                      "name": "_race",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "582:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "591:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "582:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1176,
                        "name": "_race",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "689:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "698:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "689:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1194,
                          "name": "_race",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "796:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "796:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1216,
                        "nodeType": "Block",
                        "src": "901:57:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "4e6f20737563682070657420617661696c61626c6521",
                                  "id": 1213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "922:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
                                    "typeString": "literal_string \"No such pet available!\""
                                  },
                                  "value": "No such pet available!"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
                                    "typeString": "literal_string \"No such pet available!\""
                                  }
                                ],
                                "id": 1212,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "915:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1215,
                            "nodeType": "ExpressionStatement",
                            "src": "915:32:2"
                          }
                        ]
                      },
                      "id": 1217,
                      "nodeType": "IfStatement",
                      "src": "793:165:2",
                      "trueBody": {
                        "id": 1211,
                        "nodeType": "Block",
                        "src": "807:81:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1197,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1156,
                                "src": "821:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                  "typeString": "contract VirtualPet"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 1201,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1143,
                                    "src": "840:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1204,
                                        "name": "_petName",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1145,
                                        "src": "855:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 1203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "848:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1202,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "848:6:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "848:16:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1206,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "866:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "866:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "827:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetSheep_$3074_$",
                                    "typeString": "function (address,string memory,address) returns (contract PetSheep)"
                                  },
                                  "typeName": {
                                    "id": 1199,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1198,
                                      "name": "PetSheep",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3074,
                                      "src": "831:8:2"
                                    },
                                    "referencedDeclaration": 3074,
                                    "src": "831:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PetSheep_$3074",
                                      "typeString": "contract PetSheep"
                                    }
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "827:50:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PetSheep_$3074",
                                  "typeString": "contract PetSheep"
                                }
                              },
                              "src": "821:56:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                "typeString": "contract VirtualPet"
                              }
                            },
                            "id": 1210,
                            "nodeType": "ExpressionStatement",
                            "src": "821:56:2"
                          }
                        ]
                      }
                    },
                    "id": 1218,
                    "nodeType": "IfStatement",
                    "src": "686:272:2",
                    "trueBody": {
                      "id": 1193,
                      "nodeType": "Block",
                      "src": "700:79:2",
                      "statements": [
                        {
                          "expression": {
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1179,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "714:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                "typeString": "contract VirtualPet"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1183,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "731:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1186,
                                      "name": "_petName",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "746:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 1185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "739:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1184,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "739:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "739:16:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1188,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "757:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "757:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "720:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetDog_$2696_$",
                                  "typeString": "function (address,string memory,address) returns (contract PetDog)"
                                },
                                "typeName": {
                                  "id": 1181,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1180,
                                    "name": "PetDog",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2696,
                                    "src": "724:6:2"
                                  },
                                  "referencedDeclaration": 2696,
                                  "src": "724:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PetDog_$2696",
                                    "typeString": "contract PetDog"
                                  }
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "720:48:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PetDog_$2696",
                                "typeString": "contract PetDog"
                              }
                            },
                            "src": "714:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VirtualPet_$1942",
                              "typeString": "contract VirtualPet"
                            }
                          },
                          "id": 1192,
                          "nodeType": "ExpressionStatement",
                          "src": "714:54:2"
                        }
                      ]
                    }
                  },
                  "id": 1219,
                  "nodeType": "IfStatement",
                  "src": "579:379:2",
                  "trueBody": {
                    "id": 1175,
                    "nodeType": "Block",
                    "src": "593:79:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1161,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "607:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VirtualPet_$1942",
                              "typeString": "contract VirtualPet"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1165,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "624:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1168,
                                    "name": "_petName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "639:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "632:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1166,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "632:6:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "632:16:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1170,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "650:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "650:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "613:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetRat_$2319_$",
                                "typeString": "function (address,string memory,address) returns (contract PetRat)"
                              },
                              "typeName": {
                                "id": 1163,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1162,
                                  "name": "PetRat",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2319,
                                  "src": "617:6:2"
                                },
                                "referencedDeclaration": 2319,
                                "src": "617:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PetRat_$2319",
                                  "typeString": "contract PetRat"
                                }
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "613:48:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PetRat_$2319",
                              "typeString": "contract PetRat"
                            }
                          },
                          "src": "607:54:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VirtualPet_$1942",
                            "typeString": "contract VirtualPet"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "607:54:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1222,
                        "name": "pet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1156,
                        "src": "982:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      ],
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "974:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1153,
                  "id": 1224,
                  "nodeType": "Return",
                  "src": "967:19:2"
                }
              ]
            },
            "functionSelector": "9a8fca66",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1149,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1118,
                  "src": "508:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "508:7:2"
              }
            ],
            "name": "createPet",
            "nameLocation": "438:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "457:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "449:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "mutability": "mutable",
                  "name": "_petName",
                  "nameLocation": "479:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "465:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "_race",
                  "nameLocation": "494:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "489:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:52:2"
            },
            "returnParameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "petAddress",
                  "nameLocation": "533:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "525:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:20:2"
            },
            "scope": 1227,
            "src": "429:564:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1228,
        "src": "85:911:2",
        "usedErrors": []
      }
    ],
    "src": "32:964:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PetFactory.sol",
    "exportedSymbols": {
      "ATM": [
        1009
      ],
      "PetDog": [
        2696
      ],
      "PetFactory": [
        1227
      ],
      "PetRat": [
        2319
      ],
      "PetSheep": [
        3074
      ],
      "VirtualPet": [
        1942
      ]
    },
    "id": 1228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "project:/contracts/VirtualPet.sol",
        "file": "./VirtualPet.sol",
        "id": 1104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1228,
        "sourceUnit": 3075,
        "src": "57:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PetFactory",
        "contractDependencies": [
          2319,
          2696,
          3074
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1227,
        "linearizedBaseContracts": [
          1227
        ],
        "name": "PetFactory",
        "nameLocation": "94:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1106,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "128:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1227,
            "src": "112:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "159:78:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1109,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "177:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "186:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "186:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "177:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e69656421",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "198:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
                          "typeString": "literal_string \"Permission denied!\""
                        },
                        "value": "Permission denied!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e917f1123f9bc04831730e045d42741e72e15affce047c3b8491a6ac413f59a",
                          "typeString": "literal_string \"Permission denied!\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "169:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "169:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "169:50:2"
                },
                {
                  "id": 1116,
                  "nodeType": "PlaceholderStatement",
                  "src": "229:1:2"
                }
              ]
            },
            "id": 1118,
            "name": "isOwner",
            "nameLocation": "149:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:2:2"
            },
            "src": "140:97:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "309:114:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "324:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "341:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "333:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "333:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "333:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "324:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e657220616c72656164792073657421",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
                          "typeString": "literal_string \"Owner already set!\""
                        },
                        "value": "Owner already set!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80f9f25898b41a657924ba0f7e73911f533f16d6c5a1182d2c3e5f632c2ad4c0",
                          "typeString": "literal_string \"Owner already set!\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "316:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "316:50:2"
                },
                {
                  "expression": {
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1133,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "376:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "384:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "384:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "376:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "376:18:2"
                },
                {
                  "expression": {
                    "id": 1138,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1106,
                    "src": "411:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1122,
                  "id": 1139,
                  "nodeType": "Return",
                  "src": "404:12:2"
                }
              ]
            },
            "functionSelector": "47c92a14",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPetFactoryOwner",
            "nameLocation": "252:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:2:2"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "299:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "291:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "290:18:2"
            },
            "scope": 1227,
            "src": "243:180:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "545:448:2",
              "statements": [
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "pet",
                      "nameLocation": "566:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "555:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VirtualPet_$1942",
                        "typeString": "contract VirtualPet"
                      },
                      "typeName": {
                        "id": 1155,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1154,
                          "name": "VirtualPet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1942,
                          "src": "555:10:2"
                        },
                        "referencedDeclaration": 1942,
                        "src": "555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1157,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:14:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1158,
                      "name": "_race",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "582:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "591:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "582:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1176,
                        "name": "_race",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "689:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "698:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "689:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1194,
                          "name": "_race",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "796:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "796:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1216,
                        "nodeType": "Block",
                        "src": "901:57:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "4e6f20737563682070657420617661696c61626c6521",
                                  "id": 1213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "922:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
                                    "typeString": "literal_string \"No such pet available!\""
                                  },
                                  "value": "No such pet available!"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_a61d328d21f0520382e789beb2fea0d6c491694402fab018112b6f458251ef00",
                                    "typeString": "literal_string \"No such pet available!\""
                                  }
                                ],
                                "id": 1212,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "915:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1215,
                            "nodeType": "ExpressionStatement",
                            "src": "915:32:2"
                          }
                        ]
                      },
                      "id": 1217,
                      "nodeType": "IfStatement",
                      "src": "793:165:2",
                      "trueBody": {
                        "id": 1211,
                        "nodeType": "Block",
                        "src": "807:81:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1197,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1156,
                                "src": "821:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                  "typeString": "contract VirtualPet"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 1201,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1143,
                                    "src": "840:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1204,
                                        "name": "_petName",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1145,
                                        "src": "855:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 1203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "848:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1202,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "848:6:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "848:16:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1206,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "866:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "866:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "827:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetSheep_$3074_$",
                                    "typeString": "function (address,string memory,address) returns (contract PetSheep)"
                                  },
                                  "typeName": {
                                    "id": 1199,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1198,
                                      "name": "PetSheep",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3074,
                                      "src": "831:8:2"
                                    },
                                    "referencedDeclaration": 3074,
                                    "src": "831:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PetSheep_$3074",
                                      "typeString": "contract PetSheep"
                                    }
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "827:50:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PetSheep_$3074",
                                  "typeString": "contract PetSheep"
                                }
                              },
                              "src": "821:56:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                "typeString": "contract VirtualPet"
                              }
                            },
                            "id": 1210,
                            "nodeType": "ExpressionStatement",
                            "src": "821:56:2"
                          }
                        ]
                      }
                    },
                    "id": 1218,
                    "nodeType": "IfStatement",
                    "src": "686:272:2",
                    "trueBody": {
                      "id": 1193,
                      "nodeType": "Block",
                      "src": "700:79:2",
                      "statements": [
                        {
                          "expression": {
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1179,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "714:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VirtualPet_$1942",
                                "typeString": "contract VirtualPet"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1183,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "731:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1186,
                                      "name": "_petName",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "746:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 1185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "739:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1184,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "739:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "739:16:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1188,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "757:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "757:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "720:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetDog_$2696_$",
                                  "typeString": "function (address,string memory,address) returns (contract PetDog)"
                                },
                                "typeName": {
                                  "id": 1181,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1180,
                                    "name": "PetDog",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2696,
                                    "src": "724:6:2"
                                  },
                                  "referencedDeclaration": 2696,
                                  "src": "724:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PetDog_$2696",
                                    "typeString": "contract PetDog"
                                  }
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "720:48:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PetDog_$2696",
                                "typeString": "contract PetDog"
                              }
                            },
                            "src": "714:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VirtualPet_$1942",
                              "typeString": "contract VirtualPet"
                            }
                          },
                          "id": 1192,
                          "nodeType": "ExpressionStatement",
                          "src": "714:54:2"
                        }
                      ]
                    }
                  },
                  "id": 1219,
                  "nodeType": "IfStatement",
                  "src": "579:379:2",
                  "trueBody": {
                    "id": 1175,
                    "nodeType": "Block",
                    "src": "593:79:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1161,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "607:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VirtualPet_$1942",
                              "typeString": "contract VirtualPet"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1165,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "624:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1168,
                                    "name": "_petName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "639:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "632:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1166,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "632:6:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "632:16:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1170,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "650:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "650:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "613:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PetRat_$2319_$",
                                "typeString": "function (address,string memory,address) returns (contract PetRat)"
                              },
                              "typeName": {
                                "id": 1163,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1162,
                                  "name": "PetRat",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2319,
                                  "src": "617:6:2"
                                },
                                "referencedDeclaration": 2319,
                                "src": "617:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PetRat_$2319",
                                  "typeString": "contract PetRat"
                                }
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "613:48:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PetRat_$2319",
                              "typeString": "contract PetRat"
                            }
                          },
                          "src": "607:54:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VirtualPet_$1942",
                            "typeString": "contract VirtualPet"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "607:54:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1222,
                        "name": "pet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1156,
                        "src": "982:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_VirtualPet_$1942",
                          "typeString": "contract VirtualPet"
                        }
                      ],
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "974:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1153,
                  "id": 1224,
                  "nodeType": "Return",
                  "src": "967:19:2"
                }
              ]
            },
            "functionSelector": "9a8fca66",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1149,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1118,
                  "src": "508:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "508:7:2"
              }
            ],
            "name": "createPet",
            "nameLocation": "438:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "457:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "449:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "mutability": "mutable",
                  "name": "_petName",
                  "nameLocation": "479:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "465:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "_race",
                  "nameLocation": "494:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "489:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:52:2"
            },
            "returnParameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "petAddress",
                  "nameLocation": "533:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "525:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:20:2"
            },
            "scope": 1227,
            "src": "429:564:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1228,
        "src": "85:911:2",
        "usedErrors": []
      }
    ],
    "src": "32:964:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xfC2137f76328C94fFD05F456197F584bB2517F18",
      "transactionHash": "0xf4f71aa63c482e4a6670c966a0307251cf34d589967f81a46350e2d8520e71aa"
    },
    "19010311": {
      "events": {},
      "links": {},
      "address": "0xf3a40B46df472d3ffecDA1c3586A75Da4b3852B2",
      "transactionHash": "0xac56e28403404aa1e68632f9004803d57dc4c7e3c702492e3d2124b8f558150a"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-06-16T20:08:09.287Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}